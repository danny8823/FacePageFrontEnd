{"ast":null,"code":"var _jsxFileName = \"/Users/danny714/Desktop/FacePage/frontend/src/components/Dashboard/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Navbar from '../Timeline/Navbar/Navbar';\nimport './Dashboard.css';\nimport { Button, Card } from 'react-bootstrap';\nimport { useQuery } from '@tanstack/react-query';\nimport { getPostsByAuthorAPI } from '../../services/postServices';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  user\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    data: post,\n    isError,\n    isLoading,\n    error\n  } = useQuery({\n    queryFn: () => getPostsByAuthorAPI(user._id),\n    queryKey: ['post', user._id]\n  });\n  deleteButtonHandler = () => {\n    dispatch();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Username: \", user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          children: \"Change username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          children: \"Change email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          children: \"Change password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: user === null || user === void 0 ? void 0 : user.image,\n          alt: \"profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          children: \"Change profile picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-posts-container\",\n        children: post === null || post === void 0 ? void 0 : post.map(item => /*#__PURE__*/_jsxDEV(Card, {\n          className: \"dashboard-post-card\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            className: \"card-title-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"post-date\",\n              children: new Date(item.createdAt).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-primary\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"u8RbrgIBCYn81p7FRSYGv5GoyKE=\", false, function () {\n  return [useDispatch, useQuery];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","Navbar","Button","Card","useQuery","getPostsByAuthorAPI","useDispatch","jsxDEV","_jsxDEV","Dashboard","user","_s","dispatch","data","post","isError","isLoading","error","queryFn","_id","queryKey","deleteButtonHandler","children","fileName","_jsxFileName","lineNumber","columnNumber","className","username","variant","email","src","image","alt","map","item","Title","title","Date","createdAt","toLocaleString","Body","content","Footer","_c","$RefreshReg$"],"sources":["/Users/danny714/Desktop/FacePage/frontend/src/components/Dashboard/Dashboard.jsx"],"sourcesContent":["import React from 'react'\nimport Navbar from '../Timeline/Navbar/Navbar'\nimport './Dashboard.css'\nimport { Button, Card } from 'react-bootstrap'\nimport { useQuery } from '@tanstack/react-query'\nimport { getPostsByAuthorAPI } from '../../services/postServices'\nimport { useDispatch } from 'react-redux'\n\nconst Dashboard = ({user}) => {\n    const dispatch = useDispatch()\n\n    const {data: post, isError, isLoading, error} = useQuery({\n        queryFn: () => getPostsByAuthorAPI(user._id),\n        queryKey: ['post', user._id]\n    })\n\n    deleteButtonHandler = () => {\n        dispatch()\n    }\n    return (\n    <div>\n        <Navbar/>\n        <div className = 'dashboard-body'>\n            <div className = 'profile-card'>\n                <p>Username: {user.username}</p>\n                <Button variant = 'outline-secondary'>Change username</Button>\n                <p>Email: {user.email}</p>                \n                <Button variant = 'outline-secondary'>Change email</Button>\n                <Button variant = 'outline-secondary'>Change password</Button>\n                <img src = {user?.image} alt ='profile'/>\n                <Button variant = 'outline-secondary'>Change profile picture</Button>\n            </div>\n            <div className = 'user-posts-container'>\n                {post?.map((item) => (\n                    <Card key = {item._id} className = 'dashboard-post-card'>\n                        <Card.Title className = 'card-title-container'>\n                            <span>\n                                {item.title} \n                            </span>\n                            <span className = 'post-date'>{new Date(item.createdAt).toLocaleString()}</span>\n                        </Card.Title>\n                        <Card.Body>\n                            {item.content}\n                        </Card.Body>\n                        <Card.Footer>\n                            <Button variant='outline-primary'>Delete</Button>\n                        </Card.Footer>\n                    </Card>\n                ))}\n            </div>\n        </div>\n    </div>\n  )\n}\n\nexport default Dashboard"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}