{"ast":null,"code":"var _jsxFileName = \"/Users/danny714/Desktop/FacePage/frontend/src/components/Dashboard/UpdateProfile.jsx/UpdateProfile.jsx\",\n  _s = $RefreshSig$();\nimport { useMutation } from '@tanstack/react-query';\nimport { useFormik } from 'formik';\nimport React from 'react';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateProfile = () => {\n  _s();\n  const validationSchema = Yup.object({\n    username: Yup.string().required('username is required'),\n    email: Yup.string().email(\"invalid email\").required(\"email is required\"),\n    password: Yup.string().min(5, \"password must be minimum of 5 characters long\").required(\"password is required\"),\n    confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Password must match\").required(\"confirming your password is required\")\n  });\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      email: '',\n      image: '',\n      password: '',\n      confirmPassword: ''\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateProfile, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = UpdateProfile;\nexport default UpdateProfile;\nvar _c;\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"names":["useMutation","useFormik","React","Yup","jsxDEV","_jsxDEV","UpdateProfile","_s","validationSchema","object","username","string","required","email","password","min","confirmPassword","oneOf","ref","formik","initialValues","image","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/danny714/Desktop/FacePage/frontend/src/components/Dashboard/UpdateProfile.jsx/UpdateProfile.jsx"],"sourcesContent":["import { useMutation } from '@tanstack/react-query'\nimport { useFormik } from 'formik'\nimport React from 'react'\nimport * as Yup from 'yup'\n\nconst UpdateProfile = () => {\n    const validationSchema = Yup.object({\n        username: Yup.string().required('username is required'),\n        email: Yup.string()\n            .email(\"invalid email\")\n            .required(\"email is required\"),\n        password: Yup.string()\n            .min(5, \"password must be minimum of 5 characters long\")\n            .required(\"password is required\"),\n        confirmPassword: Yup.string()\n            .oneOf([Yup.ref(\"password\"),null], \"Password must match\")\n            .required(\"confirming your password is required\")\n    })\n\n    const formik = useFormik({\n        initialValues: {\n            username: '',\n            email: '',\n            image: '',\n            password: '',\n            confirmPassword: ''\n        }\n    })\n  return (\n    <div>\n        <form>\n\n        </form>\n    </div>\n  )\n}\n\nexport default UpdateProfile"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,uBAAuB;AACnD,SAASC,SAAS,QAAQ,QAAQ;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,gBAAgB,GAAGL,GAAG,CAACM,MAAM,CAAC;IAChCC,QAAQ,EAAEP,GAAG,CAACQ,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,sBAAsB,CAAC;IACvDC,KAAK,EAAEV,GAAG,CAACQ,MAAM,CAAC,CAAC,CACdE,KAAK,CAAC,eAAe,CAAC,CACtBD,QAAQ,CAAC,mBAAmB,CAAC;IAClCE,QAAQ,EAAEX,GAAG,CAACQ,MAAM,CAAC,CAAC,CACjBI,GAAG,CAAC,CAAC,EAAE,+CAA+C,CAAC,CACvDH,QAAQ,CAAC,sBAAsB,CAAC;IACrCI,eAAe,EAAEb,GAAG,CAACQ,MAAM,CAAC,CAAC,CACxBM,KAAK,CAAC,CAACd,GAAG,CAACe,GAAG,CAAC,UAAU,CAAC,EAAC,IAAI,CAAC,EAAE,qBAAqB,CAAC,CACxDN,QAAQ,CAAC,sCAAsC;EACxD,CAAC,CAAC;EAEF,MAAMO,MAAM,GAAGlB,SAAS,CAAC;IACrBmB,aAAa,EAAE;MACXV,QAAQ,EAAE,EAAE;MACZG,KAAK,EAAE,EAAE;MACTQ,KAAK,EAAE,EAAE;MACTP,QAAQ,EAAE,EAAE;MACZE,eAAe,EAAE;IACrB;EACJ,CAAC,CAAC;EACJ,oBACEX,OAAA;IAAAiB,QAAA,eACIjB,OAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAAnB,EAAA,CA9BKD,aAAa;EAAA,QAcAL,SAAS;AAAA;AAAA0B,EAAA,GAdtBrB,aAAa;AAgCnB,eAAeA,aAAa;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}