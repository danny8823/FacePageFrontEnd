{"ast":null,"code":"var _jsxFileName = \"/Users/danny714/Desktop/FacePage/frontend/src/components/Timeline/Comments/PostComments.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useMutation } from '@tanstack/react-query';\nimport { useFormik } from 'formik';\nimport { postCommentsAPI } from '../../../services/commentServices';\nimport { Alert, Button } from 'react-bootstrap';\nimport './PostComments.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostComments = ({\n  authorId,\n  postId\n}) => {\n  _s();\n  const {\n    mutateAsync,\n    isPending,\n    isError,\n    error,\n    isSuccess\n  } = useMutation({\n    mutationFn: postCommentsAPI,\n    mutationKey: ['post-comment']\n  });\n  const formik = useFormik({\n    initialValues: {\n      comment: \"\",\n      authorId,\n      postId\n    },\n    onSubmit: values => {\n      mutateAsync(values).then(data => {\n        console.log('comment posted', data);\n        window.location.reload();\n      }).catch(error => {\n        console.log('this is an error', error);\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"comment-form\",\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Comment:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"comment-input\",\n        type: \"text\",\n        name: \"comment\",\n        onChange: formik.handleChange,\n        value: formik.values.comment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), isPending && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"info\",\n        children: \"Posting comment....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 27\n      }, this), isSuccess && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        children: \"Commented successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 27\n      }, this), isError && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: [\"Error posting comment\", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(PostComments, \"EFty/PX36yqx+pzmMBWW3hTuylY=\", false, function () {\n  return [useMutation, useFormik];\n});\n_c = PostComments;\nexport default PostComments;\nvar _c;\n$RefreshReg$(_c, \"PostComments\");","map":{"version":3,"names":["React","useMutation","useFormik","postCommentsAPI","Alert","Button","jsxDEV","_jsxDEV","PostComments","authorId","postId","_s","mutateAsync","isPending","isError","error","isSuccess","mutationFn","mutationKey","formik","initialValues","comment","onSubmit","values","then","data","console","log","window","location","reload","catch","className","children","handleSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","name","onChange","handleChange","value","variant","message","_c","$RefreshReg$"],"sources":["/Users/danny714/Desktop/FacePage/frontend/src/components/Timeline/Comments/PostComments.jsx"],"sourcesContent":["import React from 'react'\nimport { useMutation } from '@tanstack/react-query'\nimport { useFormik } from 'formik'\nimport { postCommentsAPI } from '../../../services/commentServices'\nimport { Alert, Button } from 'react-bootstrap'\nimport './PostComments.css'\n\nconst PostComments = ({authorId,postId}) => {\n\n    const {mutateAsync, isPending, isError, error, isSuccess} = useMutation({\n        mutationFn: postCommentsAPI,\n        mutationKey: ['post-comment']\n    })\n\n    const formik = useFormik({\n        initialValues: {\n            comment: \"\",\n            authorId,\n            postId\n        },\n        onSubmit: (values) => {\n            mutateAsync(values)\n                .then((data) => {\n                    console.log('comment posted', data)\n                    window.location.reload()\n                })\n                .catch((error) => {\n                    console.log('this is an error',error)\n                })\n        }\n    })\n\n    return (\n    <div className = 'comment-form-container'>\n        <form \n            className = 'comment-form' \n            onSubmit={formik.handleSubmit}\n        >\n            <label>Comment:</label>\n            <textarea\n                className = 'comment-input'\n                type='text'\n                name = 'comment'\n                onChange={formik.handleChange}\n                value = {formik.values.comment}\n            />\n            <Button type='submit'>Submit</Button>\n            {isPending && <Alert variant='info'>Posting comment....</Alert>}\n            {isSuccess && <Alert variant='success'>Commented successfully</Alert>}\n            {isError && <Alert variant='danger'>Error posting comment{error.message}</Alert>}\n        </form>\n    </div>\n    )\n}\n\nexport default PostComments"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}