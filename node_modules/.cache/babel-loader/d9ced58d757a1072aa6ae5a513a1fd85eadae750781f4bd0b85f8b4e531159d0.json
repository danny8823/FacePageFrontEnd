{"ast":null,"code":"var _jsxFileName = \"/Users/danny714/Desktop/FacePage/frontend/src/components/Register/Register.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { useMutation } from '@tanstack/react-query';\nimport { registerAPI } from '../../services/userServices';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    mutateAsync,\n    isPending,\n    isError,\n    error,\n    isSuccess\n  } = useMutation({\n    mutationFn: registerAPI,\n    mutationKey: ['register']\n  });\n  const validationSchema = Yup.object({\n    username: Yup.string().required('Username is required'),\n    email: Yup.string().email(\"invalid email\").required(\"email is required\"),\n    password: Yup.string().min(5, \"password must be minimum of 5 characters long\").required(\"password is required\"),\n    confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Password must match\").required(\"confirming your password is required\")\n  });\n  const regFormik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      username: ''\n    },\n    validationSchema,\n    onSubmit: values => {\n      mutateAsync(values).then(data => {\n        console.log('data', data);\n        navigate('/');\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        type: \"email\",\n        name: \"email\",\n        onChange: regFormik.handleChange,\n        value: regFormik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        type: \"username\",\n        name: \"username\",\n        onChange: regFormik.handleChange,\n        value: regFormik.values.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        type: \"password\",\n        name: \"password\",\n        onChange: regFormik.handleChange,\n        value: regFormik.values.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        type: \"confirmPassword\",\n        name: \"confirmPassword\",\n        onChange: regFormik.handleChange,\n        value: regFormik.values.confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"1j+aHZI6cAj+Kpu4oeov5gxFya0=\", false, function () {\n  return [useNavigate, useMutation, useFormik];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useFormik","useMutation","registerAPI","useDispatch","useNavigate","Yup","Button","jsxDEV","_jsxDEV","Register","_s","navigate","mutateAsync","isPending","isError","error","isSuccess","mutationFn","mutationKey","validationSchema","object","username","string","required","email","password","min","confirmPassword","oneOf","ref","regFormik","initialValues","onSubmit","values","then","data","console","log","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","name","onChange","handleChange","value","_c","$RefreshReg$"],"sources":["/Users/danny714/Desktop/FacePage/frontend/src/components/Register/Register.jsx"],"sourcesContent":["import React from 'react'\nimport { useFormik } from 'formik'\nimport { useMutation } from '@tanstack/react-query'\nimport { registerAPI } from '../../services/userServices'\nimport { useDispatch } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\nimport * as Yup from 'yup'\nimport { Button } from '@mui/material'\n\nconst Register = () => {\n    const navigate = useNavigate()\n\n    const {mutateAsync, isPending, isError, error, isSuccess} = useMutation({\n        mutationFn: registerAPI,\n        mutationKey: ['register']\n    })\n\n    const validationSchema = Yup.object({\n        username: Yup.string().required('Username is required'),\n        email: Yup.string()\n            .email(\"invalid email\")\n            .required(\"email is required\"),\n        password: Yup.string()\n            .min(5, \"password must be minimum of 5 characters long\")\n            .required(\"password is required\"),\n        confirmPassword: Yup.string()\n            .oneOf([Yup.ref(\"password\"),null], \"Password must match\")\n            .required(\"confirming your password is required\")\n    })\n\n    const regFormik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n            confirmPassword:'',\n            username:''\n        },\n        validationSchema,\n        onSubmit: (values) => {\n            mutateAsync(values)\n                .then((data)=>{\n                    console.log('data', data)\n                    navigate('/')\n                })\n                .catch((error)=>{\n                    console.log(error)\n                })\n        }\n    })\n\n\n  return (\n    <div>\n        <form>\n            <label>Email</label>\n            <input\n                className = 'form-input'\n                type='email'\n                name = 'email'\n                onChange={regFormik.handleChange}\n                value = {regFormik.values.email}\n            />\n            <label>Username</label>\n            <input\n                className = 'form-input'\n                type='username'\n                name = 'username'\n                onChange={regFormik.handleChange}\n                value = {regFormik.values.username}\n            />\n            <label>Password</label>\n            <input\n                className = 'form-input'\n                type='password'\n                name = 'password'\n                onChange={regFormik.handleChange}\n                value = {regFormik.values.password}\n            />\n            <label>Confirm Password</label>\n            <input\n                className = 'form-input'\n                type='confirmPassword'\n                name = 'confirmPassword'\n                onChange={regFormik.handleChange}\n                value = {regFormik.values.confirmPassword}\n            />\n            <Button type = 'submit'>Register</Button>\n        </form>\n    </div>\n  )\n}\n\nexport default Register"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}