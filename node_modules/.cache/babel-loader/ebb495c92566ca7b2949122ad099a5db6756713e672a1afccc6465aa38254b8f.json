{"ast":null,"code":"var _jsxFileName = \"/Users/danny714/Desktop/FacePage/frontend/src/components/Timeline/SinglePost/SinglePost.jsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from '@tanstack/react-query';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPostAPI } from '../../../services/postServices';\nimport { Card } from 'react-bootstrap';\nimport { getCommentsAPI } from '../../../services/commentServices';\nimport './SinglePost.css';\nimport PostComments from '../Comments/PostComments';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SinglePost = () => {\n  _s();\n  const {\n    user\n  } = useSelector(state => {\n    var _state$auth;\n    return state === null || state === void 0 ? void 0 : (_state$auth = state.auth) === null || _state$auth === void 0 ? void 0 : _state$auth.user;\n  });\n  const {\n    _id\n  } = useParams();\n  const {\n    data: postData\n  } = useQuery({\n    queryFn: () => getPostAPI(_id),\n    queryKey: ['post', _id]\n  });\n  const {\n    data: commentData,\n    isError,\n    isLoading,\n    error\n  } = useQuery({\n    queryFn: () => getCommentsAPI(_id),\n    queryKey: ['comment', _id]\n  });\n  if (postData) {\n    var _post$author;\n    const {\n      post\n    } = postData;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"single-post-body\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: \"single-post-card\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: [post && post.title ? post.title : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 48\n          }, this), \" by\", /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"single-post-user-img\",\n            src: (_post$author = post.author) === null || _post$author === void 0 ? void 0 : _post$author.image,\n            alt: \"user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), post && post.author ? post.author.username : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No user data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 59\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: post && post.content ? post.content : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostComments, {\n        postId: post._id,\n        authorId: user._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), commentData === null || commentData === void 0 ? void 0 : commentData.map(comment => /*#__PURE__*/_jsxDEV(Card, {\n        className: \"comment-card\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n          children: comment.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          children: [\"Comment by -\", comment.author && comment.author.username ? comment.author.username : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Guest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 86\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, comment._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"No post data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(SinglePost, \"a0gslou0e3dHmefjDcMOCbTr0+U=\", false, function () {\n  return [useSelector, useParams, useQuery, useQuery];\n});\n_c = SinglePost;\nexport default SinglePost;\nvar _c;\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"names":["useQuery","React","useParams","getPostAPI","Card","getCommentsAPI","PostComments","useSelector","jsxDEV","_jsxDEV","SinglePost","_s","user","state","_state$auth","auth","_id","data","postData","queryFn","queryKey","commentData","isError","isLoading","error","_post$author","post","className","children","Header","title","fileName","_jsxFileName","lineNumber","columnNumber","src","author","image","alt","username","Body","content","postId","authorId","map","comment","Footer","_c","$RefreshReg$"],"sources":["/Users/danny714/Desktop/FacePage/frontend/src/components/Timeline/SinglePost/SinglePost.jsx"],"sourcesContent":["import { useQuery } from '@tanstack/react-query'\nimport React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { getPostAPI } from '../../../services/postServices'\nimport { Card } from 'react-bootstrap'\nimport { getCommentsAPI } from '../../../services/commentServices'\nimport './SinglePost.css'\nimport PostComments from '../Comments/PostComments'\nimport { useSelector } from 'react-redux'\nconst SinglePost = () => {\n\n    const {user} = useSelector((state) => state?.auth?.user)\n    const {_id} = useParams()\n    \n    const {data: postData} = useQuery({\n        queryFn: () => getPostAPI(_id),\n        queryKey: ['post',_id]\n    })\n    \n    const {data: commentData, isError, isLoading, error} = useQuery({\n      queryFn:() => getCommentsAPI(_id),\n      queryKey: ['comment', _id]\n    })\n  \n  if(postData) {\n    const {post} = postData\n\n    return (\n      <div className = 'single-post-body'>\n        <Card className = 'single-post-card'>\n          <Card.Header>\n            {post && post.title ? post.title : <p>No data</p>} by \n            <img className = 'single-post-user-img' src = {post.author?.image} alt = 'user'/>\n            {post && post.author ? post.author.username : <p>No user data</p>}\n          </Card.Header>\n          <Card.Body>{post && post.content ? post.content : <p>No data</p>}</Card.Body>\n        </Card>\n        <PostComments postId = {post._id} authorId = {user._id}/>\n        {commentData?.map((comment)=>(\n          <Card className = 'comment-card' key = {comment._id}>\n            <Card.Body>\n              {comment.comment}\n            </Card.Body>\n            <Card.Footer>\n              Comment by - \n              {comment.author && comment.author.username ? comment.author.username : <span>Guest</span>}\n            </Card.Footer>\n          </Card>\n        ))}\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1>No post data</h1>\n    </div>\n  )\n}\n\nexport default SinglePost"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}